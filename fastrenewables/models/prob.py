# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/11_probabilistic_models.ipynb (unless otherwise specified).

__all__ = ['MeanStdWrapper']

# Cell
import numpy as np
import torch
from torch import nn
from ..tabular.model import *
from fastai.tabular.data import *
from ..timeseries.model import *
from fastai.tabular.all import *
from torch.autograd import Variable
import pandas as pd
from ..losses import *
from fastai.losses import MSELossFlat
from blitz.utils import variational_estimator
from ..utils_blitz import set_train_mode

# Cell
@variational_estimator
class MeanStdWrapper(nn.Module):
    def __init__(self, model, last_layer_size):
        super().__init__()
        self.model = model
        self.decoder = nn.Linear(last_layer_size, 2)

    def forward(self, categorical_data, continuous_data):
        x = self.model(categorical_data, continuous_data)
        x = self.decoder(x)
        return x

    def train(self, mode: bool = True):
        super().train(mode)
        set_train_mode(self, mode)